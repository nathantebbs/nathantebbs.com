<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pre-Release on </title>
    <link>/tags/pre-release/</link>
    <description>Recent content in Pre-Release on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 29 May 2025 11:32:21 -0700</lastBuildDate><atom:link href="/tags/pre-release/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PyScrape</title>
      <link>/projects/pyscrape/</link>
      <pubDate>Thu, 29 May 2025 11:32:21 -0700</pubDate>
      
      <guid>/projects/pyscrape/</guid>
      <description>&lt;h2 id=&#34;related-content&#34;&gt;Related Content&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nathantebbs/pyscrape&#34;&gt;Source Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;about-pyscrape&#34;&gt;About PyScrape&lt;/h2&gt;
&lt;p&gt;As a Computer Science student at the University of Arizona, I often found myself navigating course websites and manually downloading content—an inconvenient process that took me out of the terminal environment I preferred working in.&lt;/p&gt;
&lt;p&gt;To streamline this task, I began developing &lt;strong&gt;PyScrape&lt;/strong&gt;, a command-line tool for downloading static content from static websites.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;p&gt;PyScrape is currently a work in progress. At this stage, it supports downloading PDFs from a given webpage. Support for additional file types such as DOCX documents, images, and presentations is planned for future releases, as the project continues to evolve.&lt;/p&gt;</description>
      <content>&lt;h2 id=&#34;related-content&#34;&gt;Related Content&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nathantebbs/pyscrape&#34;&gt;Source Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;about-pyscrape&#34;&gt;About PyScrape&lt;/h2&gt;
&lt;p&gt;As a Computer Science student at the University of Arizona, I often found myself navigating course websites and manually downloading content—an inconvenient process that took me out of the terminal environment I preferred working in.&lt;/p&gt;
&lt;p&gt;To streamline this task, I began developing &lt;strong&gt;PyScrape&lt;/strong&gt;, a command-line tool for downloading static content from static websites.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;p&gt;PyScrape is currently a work in progress. At this stage, it supports downloading PDFs from a given webpage. Support for additional file types such as DOCX documents, images, and presentations is planned for future releases, as the project continues to evolve.&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
