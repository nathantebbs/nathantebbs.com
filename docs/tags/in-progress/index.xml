<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>In-Progress on </title>
    <link>/tags/in-progress/</link>
    <description>Recent content in In-Progress on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 29 May 2025 11:50:58 -0700</lastBuildDate><atom:link href="/tags/in-progress/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Listro</title>
      <link>/projects/listro/</link>
      <pubDate>Thu, 29 May 2025 11:50:58 -0700</pubDate>
      
      <guid>/projects/listro/</guid>
      <description>&lt;h2 id=&#34;related-content&#34;&gt;Related Content&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nathantebbs/listro&#34;&gt;Source Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;work-in-progress&#34;&gt;Work in Progress&lt;/h2&gt;
&lt;p&gt;While key foundational features of Listro have been implemented in &lt;code&gt;v0.0.1&lt;/code&gt;, the project remains under active development. Features such as persistent state saving are not yet available, and due to limited testing, users may encounter bugs.&lt;/p&gt;
&lt;h2 id=&#34;about-listro&#34;&gt;About Listro&lt;/h2&gt;
&lt;p&gt;When you have a lot to get done, keeping track of tasks can quickly become overwhelming. Since I do most of my work in the terminal using tools like Neovim, I set out to build a terminal user interface (TUI) that fits seamlessly into my existing workflow.&lt;/p&gt;</description>
      <content>&lt;h2 id=&#34;related-content&#34;&gt;Related Content&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nathantebbs/listro&#34;&gt;Source Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;work-in-progress&#34;&gt;Work in Progress&lt;/h2&gt;
&lt;p&gt;While key foundational features of Listro have been implemented in &lt;code&gt;v0.0.1&lt;/code&gt;, the project remains under active development. Features such as persistent state saving are not yet available, and due to limited testing, users may encounter bugs.&lt;/p&gt;
&lt;h2 id=&#34;about-listro&#34;&gt;About Listro&lt;/h2&gt;
&lt;p&gt;When you have a lot to get done, keeping track of tasks can quickly become overwhelming. Since I do most of my work in the terminal using tools like Neovim, I set out to build a terminal user interface (TUI) that fits seamlessly into my existing workflow.&lt;/p&gt;
&lt;p&gt;To achieve this, I drew inspiration from other terminal-based tools and prioritized familiarity and efficiency. Core features include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Strong Keyboard Navigation&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;q&lt;/code&gt;, &lt;code&gt;esc&lt;/code&gt;, or &lt;code&gt;Ctrl-C&lt;/code&gt; to exit&lt;/li&gt;
&lt;li&gt;&lt;code&gt;t&lt;/code&gt; to add a task&lt;/li&gt;
&lt;li&gt;&lt;code&gt;l&lt;/code&gt; to add a task list&lt;/li&gt;
&lt;li&gt;&lt;code&gt;d&lt;/code&gt; to delete selected tasks&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;File-Based Sessions (Planned)&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JSON/SQLite-based state management, similar to session handling in TMUX&lt;/li&gt;
&lt;li&gt;Launch from any terminal context into a specified session&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cross-Platform Support (Planned)&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download a platform-specific executable and run from anywhere in the terminal&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>PyScrape</title>
      <link>/projects/pyscrape/</link>
      <pubDate>Thu, 29 May 2025 11:32:21 -0700</pubDate>
      
      <guid>/projects/pyscrape/</guid>
      <description>&lt;h2 id=&#34;related-content&#34;&gt;Related Content&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nathantebbs/pyscrape&#34;&gt;Source Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;about-pyscrape&#34;&gt;About PyScrape&lt;/h2&gt;
&lt;p&gt;As a Computer Science student at the University of Arizona, I often found myself navigating course websites and manually downloading content—an inconvenient process that took me out of the terminal environment I preferred working in.&lt;/p&gt;
&lt;p&gt;To streamline this task, I began developing &lt;strong&gt;PyScrape&lt;/strong&gt;, a command-line tool for downloading static content from static websites.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;p&gt;PyScrape is currently a work in progress. At this stage, it supports downloading PDFs from a given webpage. Support for additional file types such as DOCX documents, images, and presentations is planned for future releases, as the project continues to evolve.&lt;/p&gt;</description>
      <content>&lt;h2 id=&#34;related-content&#34;&gt;Related Content&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nathantebbs/pyscrape&#34;&gt;Source Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;about-pyscrape&#34;&gt;About PyScrape&lt;/h2&gt;
&lt;p&gt;As a Computer Science student at the University of Arizona, I often found myself navigating course websites and manually downloading content—an inconvenient process that took me out of the terminal environment I preferred working in.&lt;/p&gt;
&lt;p&gt;To streamline this task, I began developing &lt;strong&gt;PyScrape&lt;/strong&gt;, a command-line tool for downloading static content from static websites.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;p&gt;PyScrape is currently a work in progress. At this stage, it supports downloading PDFs from a given webpage. Support for additional file types such as DOCX documents, images, and presentations is planned for future releases, as the project continues to evolve.&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
